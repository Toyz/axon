// Code generated by Axon framework. DO NOT EDIT.
// This file was automatically generated and should not be modified manually.

package services

import (
	"context"
	"log"

	"go.uber.org/fx"

	"github.com/toyz/axon/examples/simple-app/internal/logging"
)

// CrawlerServiceInterface is the interface for CrawlerService
type CrawlerServiceInterface interface {
	Start(ctx context.Context) (error)
	Stop(ctx context.Context) (error)
}

func NewCrawlerService(logger *logging.AppLogger) *CrawlerService {
	return &CrawlerService{
		logger: logger,
	}
}

func initCrawlerServiceLifecycle(lc fx.Lifecycle, service *CrawlerService) {
	lc.Append(fx.Hook{
		OnStart: func(ctx context.Context) error {
			go func() {
				if err := service.Start(ctx); err != nil {
					log.Printf("background start error in %s: %v", "CrawlerService", err)
				}
			}()
			return nil
		},
		OnStop: func(ctx context.Context) error {
			return service.Stop(ctx)
		},
	})
}

func NewCrawlerServiceInterface(impl *CrawlerService) CrawlerServiceInterface {
	return impl
}

// AutogenModule provides all core services in this package
var AutogenModule = fx.Module("services",
	fx.Provide(NewCrawlerService),
	fx.Invoke(initCrawlerServiceLifecycle),
	fx.Provide(NewCrawlerServiceInterface),
)
