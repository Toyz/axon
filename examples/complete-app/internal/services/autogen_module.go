// Code generated by Axon framework. DO NOT EDIT.
// This file was automatically generated and should not be modified manually.

package services

import (
	"context"
	"go.uber.org/fx"
	"github.com/toyz/axon/internal/config"
)

func NewDatabaseService(lc fx.Lifecycle, Config *config.Config) *DatabaseService {
	service := &DatabaseService{
		Config: Config,
	}
	
	lc.Append(fx.Hook{
		OnStart: func(ctx context.Context) error {
			return service.Start(ctx)
		},
		OnStop: func(ctx context.Context) error {
			return service.Stop(ctx)
		},
	})
	
	return service
}

// NewSessionServiceFactory creates a factory function for SessionService (Transient mode)
func NewSessionServiceFactory(DatabaseService *DatabaseService) func() *SessionService {
	return func() *SessionService {
		return &SessionService{
			DatabaseService: DatabaseService,
		}
	}
}

func NewUserService(lc fx.Lifecycle, Config *config.Config) *UserService {
	service := &UserService{
		Config: Config,
	}
	
	lc.Append(fx.Hook{
		OnStart: func(ctx context.Context) error {
			return service.Start(ctx)
		},
		OnStop: func(ctx context.Context) error {
			return service.Stop(ctx)
		},
	})
	
	return service
}

// AutogenModule provides all core services in this package
var AutogenModule = fx.Module("services",
	fx.Provide(NewDatabaseService),
	fx.Provide(NewSessionServiceFactory),
	fx.Provide(NewUserService),
)
